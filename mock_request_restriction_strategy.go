// Code generated by MockGen. DO NOT EDIT.
// Source: request_restriction_strategy.go

// Package lucy is a generated GoMock package.
package lucy

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRequestRestrictionStrategy is a mock of RequestRestrictionStrategy interface
type MockRequestRestrictionStrategy struct {
	ctrl     *gomock.Controller
	recorder *MockRequestRestrictionStrategyMockRecorder
}

// MockRequestRestrictionStrategyMockRecorder is the mock recorder for MockRequestRestrictionStrategy
type MockRequestRestrictionStrategyMockRecorder struct {
	mock *MockRequestRestrictionStrategy
}

// NewMockRequestRestrictionStrategy creates a new mock instance
func NewMockRequestRestrictionStrategy(ctrl *gomock.Controller) *MockRequestRestrictionStrategy {
	mock := &MockRequestRestrictionStrategy{ctrl: ctrl}
	mock.recorder = &MockRequestRestrictionStrategyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRequestRestrictionStrategy) EXPECT() *MockRequestRestrictionStrategyMockRecorder {
	return m.recorder
}

// CheckRestriction mocks base method
func (m *MockRequestRestrictionStrategy) CheckRestriction() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckRestriction")
	ret0, _ := ret[0].(bool)
	return ret0
}

// CheckRestriction indicates an expected call of CheckRestriction
func (mr *MockRequestRestrictionStrategyMockRecorder) CheckRestriction() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckRestriction", reflect.TypeOf((*MockRequestRestrictionStrategy)(nil).CheckRestriction))
}

// Resource mocks base method
func (m *MockRequestRestrictionStrategy) Resource(request *Request) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Resource", request)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Resource indicates an expected call of Resource
func (mr *MockRequestRestrictionStrategyMockRecorder) Resource(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Resource", reflect.TypeOf((*MockRequestRestrictionStrategy)(nil).Resource), request)
}

// ChangePriorityWhenRestricted mocks base method
func (m *MockRequestRestrictionStrategy) ChangePriorityWhenRestricted(request *Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ChangePriorityWhenRestricted", request)
}

// ChangePriorityWhenRestricted indicates an expected call of ChangePriorityWhenRestricted
func (mr *MockRequestRestrictionStrategyMockRecorder) ChangePriorityWhenRestricted(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangePriorityWhenRestricted", reflect.TypeOf((*MockRequestRestrictionStrategy)(nil).ChangePriorityWhenRestricted), request)
}
