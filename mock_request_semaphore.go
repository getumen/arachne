// Code generated by MockGen. DO NOT EDIT.
// Source: request_semaphore.go

// Package lucy is a generated GoMock package.
package lucy

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRequestSemaphore is a mock of RequestSemaphore interface
type MockRequestSemaphore struct {
	ctrl     *gomock.Controller
	recorder *MockRequestSemaphoreMockRecorder
}

// MockRequestSemaphoreMockRecorder is the mock recorder for MockRequestSemaphore
type MockRequestSemaphoreMockRecorder struct {
	mock *MockRequestSemaphore
}

// NewMockRequestSemaphore creates a new mock instance
func NewMockRequestSemaphore(ctrl *gomock.Controller) *MockRequestSemaphore {
	mock := &MockRequestSemaphore{ctrl: ctrl}
	mock.recorder = &MockRequestSemaphoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRequestSemaphore) EXPECT() *MockRequestSemaphoreMockRecorder {
	return m.recorder
}

// Acquire mocks base method
func (m *MockRequestSemaphore) Acquire(ctx context.Context, resource string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Acquire", ctx, resource)
	ret0, _ := ret[0].(error)
	return ret0
}

// Acquire indicates an expected call of Acquire
func (mr *MockRequestSemaphoreMockRecorder) Acquire(ctx, resource interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Acquire", reflect.TypeOf((*MockRequestSemaphore)(nil).Acquire), ctx, resource)
}

// Release mocks base method
func (m *MockRequestSemaphore) Release(resource string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Release", resource)
}

// Release indicates an expected call of Release
func (mr *MockRequestSemaphoreMockRecorder) Release(resource interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Release", reflect.TypeOf((*MockRequestSemaphore)(nil).Release), resource)
}
